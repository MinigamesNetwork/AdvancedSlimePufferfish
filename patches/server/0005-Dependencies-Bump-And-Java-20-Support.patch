From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: IWillNeverDefine <mail@iwillneverdefine.http>
Date: Fri, 25 Aug 2023 04:13:53 +0700
Subject: [PATCH] smth


diff --git a/build.gradle.kts b/build.gradle.kts
index e7101d5675fd50a85b694cee54a63eae3d24470e..7e2601928d744d8ca312d23eb47d916db841a5d8 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -6,6 +6,8 @@ plugins {
     id("com.github.johnrengelman.shadow")
 }
 
+val tlds = setOf("net", "com", "org")
+
 dependencies {
     implementation(project(":slimeworldmanager-api")) // ASWM // Pufferfish // Paper
     // Pufferfish start
@@ -29,7 +31,7 @@ dependencies {
      */
     implementation("org.apache.logging.log4j:log4j-core:2.14.1") // Paper - implementation
     annotationProcessor("org.apache.logging.log4j:log4j-core:2.14.1") // Paper - Needed to generate meta for our Log4j plugins
-    implementation("io.netty:netty-codec-haproxy:4.1.87.Final") // Paper - Add support for proxy protocol
+    implementation("io.netty:netty-codec-haproxy:4.1.97.Final") // Paper - Add support for proxy protocol
     // Paper end
     implementation("org.apache.logging.log4j:log4j-iostreams:2.19.0") // Paper - remove exclusion
     implementation("org.ow2.asm:asm:9.4")
@@ -63,7 +65,7 @@ dependencies {
     testImplementation("junit:junit:4.13.2")
     testImplementation("org.hamcrest:hamcrest-library:1.3")
 
-    implementation("io.netty:netty-all:4.1.87.Final"); // Paper - Bump netty
+    implementation("io.netty:netty-all:4.1.97.Final"); // Paper - Bump netty
 }
 
 val craftbukkitPackageVersion = "1_20_R1" // Paper
@@ -96,7 +98,7 @@ tasks.jar {
             "Git-Commit" to gitHash, // Paper
             "CraftBukkit-Package-Version" to craftbukkitPackageVersion, // Paper
         )
-        for (tld in setOf("net", "com", "org")) {
+        for (tld in tlds) {
             attributes("$tld/bukkit", "Sealed" to true)
         }
     }
diff --git a/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java b/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java
index 7b091c1258c3f33933ec30a15d963e9d5f069ba7..dc10b79f23d82199df07e28c11fe5abec43845d6 100644
--- a/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java
+++ b/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java
@@ -94,7 +94,7 @@ public class PufferfishConfig {
 		// Attempt to detect vectorization
 		try {
 			SIMDDetection.isEnabled = SIMDDetection.canEnable(PufferfishLogger.LOGGER);
-			SIMDDetection.versionLimited = SIMDDetection.getJavaVersion() != 17 && SIMDDetection.getJavaVersion() != 18 && SIMDDetection.getJavaVersion() != 19;
+			SIMDDetection.versionLimited = SIMDDetection.getJavaVersion() != 17 && SIMDDetection.getJavaVersion() != 18 && SIMDDetection.getJavaVersion() != 19 && SIMDDetection.getJavaVersion() != 20;
 		} catch (NoClassDefFoundError | Exception ignored) {
 			ignored.printStackTrace();
 		}
@@ -102,7 +102,7 @@ public class PufferfishConfig {
 		if (SIMDDetection.isEnabled) {
 			PufferfishLogger.LOGGER.info("SIMD operations detected as functional. Will replace some operations with faster versions.");
 		} else if (SIMDDetection.versionLimited) {
-			PufferfishLogger.LOGGER.warning("Will not enable SIMD! These optimizations are only safely supported on Java 17, Java 18, and Java 19.");
+			PufferfishLogger.LOGGER.warning("Will not enable SIMD! These optimizations are only safely supported on Java 17, Java 18, Java 19 and Java 20.");
 		} else {
 			PufferfishLogger.LOGGER.warning("SIMD operations are available for your server, but are not configured!");
 			PufferfishLogger.LOGGER.warning("To enable additional optimizations, add \"--add-modules=jdk.incubator.vector\" to your startup flags, BEFORE the \"-jar\".");
