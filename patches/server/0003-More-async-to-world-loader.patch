From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: shoker537 <andreybest2002@ya.ru>
Date: Tue, 6 Jun 2023 14:33:47 +0300
Subject: [PATCH] More async to world loader


diff --git a/src/main/java/com/infernalsuite/aswm/SlimeNMSBridgeImpl.java b/src/main/java/com/infernalsuite/aswm/SlimeNMSBridgeImpl.java
index a9902afe7c5d3387153609b808834e093e12b9e9..bd8134cf9e29934f5c561bd5ba2f353350c56d71 100644
--- a/src/main/java/com/infernalsuite/aswm/SlimeNMSBridgeImpl.java
+++ b/src/main/java/com/infernalsuite/aswm/SlimeNMSBridgeImpl.java
@@ -8,7 +8,6 @@ import com.infernalsuite.aswm.level.SlimeBootstrap;
 import com.infernalsuite.aswm.level.SlimeInMemoryWorld;
 import com.infernalsuite.aswm.level.SlimeLevelInstance;
 import com.mojang.serialization.Lifecycle;
-import net.kyori.adventure.util.Services;
 import net.minecraft.SharedConstants;
 import net.minecraft.core.registries.Registries;
 import net.minecraft.resources.ResourceKey;
@@ -29,10 +28,12 @@ import org.apache.logging.log4j.Logger;
 import org.bukkit.Bukkit;
 import org.bukkit.World;
 import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.plugin.java.JavaPlugin;
 import org.jetbrains.annotations.Nullable;
 
 import java.io.IOException;
 import java.util.Locale;
+import java.util.concurrent.CompletableFuture;
 
 public class SlimeNMSBridgeImpl implements SlimeNMSBridge {
 
@@ -102,7 +103,6 @@ public class SlimeNMSBridgeImpl implements SlimeNMSBridge {
             endWorld.getPropertyMap().setValue(SlimeProperties.ENVIRONMENT, World.Environment.THE_END.toString().toLowerCase());
             defaultEndWorld = endWorld;
         }
-
     }
 
     @Override
@@ -121,6 +121,30 @@ public class SlimeNMSBridgeImpl implements SlimeNMSBridge {
         registerWorld(server);
         return server.getSlimeInstance();
     }
+    @Override
+    public SlimeWorldInstance loadInstanceAsync(JavaPlugin plugin, SlimeWorld slimeWorld) {
+        String worldName = slimeWorld.getName();
+
+        if (Bukkit.getWorld(worldName) != null) {
+            throw new IllegalArgumentException("World " + worldName + " already exists! Maybe it's an outdated SlimeWorld object?");
+        }
+
+        SlimeLevelInstance server = createCustomWorld(slimeWorld, null);
+
+        registerWorldAndWait(plugin, server);
+
+        return server.getSlimeInstance();
+    }
+
+    private synchronized void registerWorldAndWait(JavaPlugin plugin, SlimeLevelInstance level){
+        CompletableFuture<Void> f;
+        f = CompletableFuture.runAsync(() -> registerWorld(level), plugin.getServer().getScheduler().getMainThreadExecutor(plugin));
+        try {
+            f.get();
+        } catch (Throwable e) {
+            throw new RuntimeException(e);
+        }
+    }
 
     @Override
     public SlimeWorldInstance getInstance(World world) {
